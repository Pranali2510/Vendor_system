# Generated by Django 5.0.4 on 2024-05-07 10:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Vendor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vendor_code", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("contact_details", models.TextField()),
                ("address", models.TextField()),
                ("on_time_delivery_rate", models.FloatField(blank=True, null=True)),
                ("quality_rating_avg", models.FloatField(blank=True, null=True)),
                ("average_response_time", models.FloatField(blank=True, null=True)),
                ("fulfillment_rate", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "vendor",
                "unique_together": {("id", "vendor_code")},
            },
        ),
        migrations.CreateModel(
            name="HistoricalPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("on_time_delivery_rate", models.FloatField(blank=True, null=True)),
                ("quality_rating_avg", models.FloatField(blank=True, null=True)),
                ("average_response_time", models.FloatField(blank=True, null=True)),
                ("fulfillment_rate", models.FloatField(blank=True, null=True)),
                (
                    "vendor",
                    models.ForeignKey(
                        blank=True,
                        db_column="vendor",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="vendor_manage_app.vendor",
                        to_field="vendor_code",
                    ),
                ),
            ],
            options={
                "db_table": "historical_performance",
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("po_number", models.CharField(max_length=50, unique=True)),
                ("order_date", models.DateTimeField()),
                ("delivery_date", models.DateTimeField()),
                ("items", models.JSONField()),
                ("quantity", models.IntegerField()),
                ("status", models.CharField(max_length=30)),
                ("quality_rating", models.FloatField(blank=True, null=True)),
                ("issue_date", models.DateTimeField()),
                ("acknowledgment_date", models.DateTimeField(blank=True, null=True)),
                ("po_deliverd_date", models.DateTimeField(blank=True, null=True)),
                (
                    "vendor",
                    models.ForeignKey(
                        db_column="vendor",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="vendor_manage_app.vendor",
                        to_field="vendor_code",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_order",
                "unique_together": {("id", "po_number")},
            },
        ),
    ]
